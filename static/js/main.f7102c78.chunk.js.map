{"version":3,"sources":["Todo.js","TodoList.js","index.js"],"names":["Todo","react_default","a","createElement","className","this","props","todo","title","Component","TodoList","state","todoInput","todos","updateTodo","_this","setState","addTodo","event","preventDefault","prevState","completed","concat","Object","toConsumableArray","moveToCompleted","removeTodo","moveToCompleted2","previousState","newTodos","find","t","filter","_this2","fetch","then","response","json","_this3","onSubmit","type","value","placeholder","onChange","target","map","index","key","src_Todo","onClick","ReactDOM","render","src_TodoList","document","getElementById"],"mappings":"gOAiBeA,mLARX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZC,KAAKC,MAAMC,KAAKC,cARNC,aCoHJC,oNAjHXC,MAAQ,CACRC,UAAW,GACXC,MAAO,MAWTC,WAAa,SAACP,GACZQ,EAAKC,SAAS,iBAAO,CACnBJ,UAAWL,QAIfU,QAAU,SAACC,GACTA,EAAMC,iBACuB,KAAzBJ,EAAKJ,MAAMC,WACbG,EAAKC,SAAS,SAACI,GAAD,MAAgB,CAC5BR,UAAW,GACXC,MAAK,CAAG,CACNL,MAAOY,EAAUR,UACjBS,WAAW,IAFRC,OAAAC,OAAAC,EAAA,EAAAD,CAGCH,EAAUP,cAKtBY,gBAAkB,SAAClB,GACjBQ,EAAKC,SAAS,SAACI,GAAD,MAAgB,CAC5BP,MAAK,CAAG,CACRQ,WAAW,EAAMb,MAAOD,EAAKC,QADxBc,OAAAC,OAAAC,EAAA,EAAAD,CAEAH,EAAUP,WAEjBE,EAAKW,WAAWnB,MAGlBoB,iBAAmB,SAACpB,GAClBQ,EAAKC,SAAS,SAACY,GAEb,IAAMC,EAAQN,OAAAC,EAAA,EAAAD,CAAOK,EAAcf,OAInC,OAHkBgB,EAASC,KAAK,SAAAC,GAAC,OAAIA,IAAMxB,IACjCc,WAAY,EAEf,CAAER,MAAOgB,QAsBpBH,WAAa,SAACnB,GACZQ,EAAKC,SAAS,SAACI,GAAD,MAAgB,CAC5BP,MAAOO,EAAUP,MAAMmB,OAAO,SAACD,GAAD,OAC5BA,IAAMxB,2FApEQ,IAAA0B,EAAA5B,KAClB6B,MAAM,8CACLC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACE,GACNJ,EAAKjB,SAAS,CAACH,MAAOwB,uCAoEhB,IAAAC,EAAAjC,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOmC,SAAUlC,KAAKY,SACpChB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,OAAOoC,KAAK,OAAOC,MAAOpC,KAAKM,MAAMC,UAAW8B,YAAY,iBAC7EC,SAAU,SAACzB,GAAD,OAAWoB,EAAKxB,WAAWI,EAAM0B,OAAOH,WAElDxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASoC,KAAK,SAASC,MAAM,UAA/C,QAEJxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,eAECC,KAAKM,MAAME,MAAMgC,IAAI,SAACtC,EAAMuC,GAAP,OACD,IAAnBvC,EAAKc,WACLpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2C,IAAKD,GAC9B7C,EAAAC,EAAAC,cAAC6C,EAAD,CAAMD,IAAKD,EACXvC,KAAMA,IAENN,EAAAC,EAAAC,cAAA,UAAQqC,KAAK,OAAOS,QAAS,kBAAMX,EAAKb,gBAAgBlB,KAAxD,aACAN,EAAAC,EAAAC,cAAA,UAAQqC,KAAK,OAAOS,QAAS,kBAAMX,EAAKZ,WAAWnB,KAAnD,aAGJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,cACCC,KAAKM,MAAME,MAAMgC,IAAI,SAACtC,EAAMuC,GAAP,OACD,IAAnBvC,EAAKc,WACLpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2C,IAAKD,GAC9B7C,EAAAC,EAAAC,cAAC6C,EAAD,CACAzC,KAAMA,eA1GKE,cCCvByC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAAcC,SAASC,eAAe","file":"static/js/main.f7102c78.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types'\r\n\r\nclass Todo extends Component {\r\n  static propTypes = {\r\n    todo: propTypes.object.isRequired,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo\">\r\n        {this.props.todo.title}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\nimport Todo from './Todo'\r\nimport './App.css';\r\n\r\nclass TodoList extends Component {\r\n\r\n    state = {\r\n    todoInput: \"\",\r\n    todos: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/todos')\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n     this.setState({todos: json});\r\n    })\r\n  }\r\n\r\n  updateTodo = (todo) => {\r\n    this.setState(() => ({\r\n      todoInput: todo\r\n    }))\r\n  }\r\n\r\n  addTodo = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.todoInput !== \"\") {\r\n      this.setState((prevState) => ({\r\n        todoInput: \"\", \r\n        todos: [{\r\n          title: prevState.todoInput, \r\n          completed: false\r\n        }, ...prevState.todos]\r\n      }))   \r\n    }    \r\n  }\r\n\r\n  moveToCompleted = (todo) => {\r\n    this.setState((prevState) => ({\r\n      todos: [{\r\n      completed: true, title: todo.title\r\n      },...prevState.todos]\r\n    }))  \r\n    this.removeTodo(todo)     \r\n  }\r\n\r\n  moveToCompleted2 = (todo) => {\r\n    this.setState((previousState) => {\r\n      /* const newTodoObject = Object.assign(todo, {completed: true}); */\r\n      const newTodos = [...previousState.todos]\r\n      const foundTodo = newTodos.find(t => t === todo)\r\n      foundTodo.completed = true  \r\n    \r\n      return { todos: newTodos }\r\n    })     \r\n  }\r\n  /* moveToCompleted3 = (todo) => {\r\n    this.setState((prevState) => {\r\n//this works\r\nconst copiedTodos = [prevState.todos];\r\nlet foundTodo = {...copiedTodos.find(t) => t=== todo), completed: true}\r\ncopiedTodos[copiedTodos.indexOf(todo)]  =foundTodo\r\nreturn {todos: copiedTodos}\r\n\r\n//this not\r\n      const copiedTodos = [...prevState.todos]\r\n      const theTodo = copiedTodos.find((t) => t === todo)\r\n      theTodo.completed = true\r\n      copiedTodos.filter((t) => {\r\n        t !== todo\r\n\r\n    }))}\r\n\r\n  } */\r\n\r\n  removeTodo = (todo) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.filter((t) => \r\n        t !== todo)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"form\" onSubmit={this.addTodo}>\r\n          <div>\r\n            <input className=\"task\" type=\"text\" value={this.state.todoInput} placeholder=\"New task to do\"\r\n            onChange={(event) => this.updateTodo(event.target.value)} />\r\n          </div>        \r\n            <button className=\"submit\" type=\"submit\" value=\"Submit\">Add</button>\r\n        </form>\r\n        <div className=\"todo-title\">Incomplete:</div>\r\n        \r\n        {this.state.todos.map((todo, index) => (\r\n          todo.completed === false && \r\n          <div className=\"list-item\" key={index}>\r\n            <Todo key={index}\r\n            todo={todo}\r\n            />\r\n            <button type='text' onClick={() => this.moveToCompleted(todo)}>Completed</button>\r\n            <button type='text' onClick={() => this.removeTodo(todo)}>Remove</button>\r\n          </div> \r\n        ))}\r\n        <div className=\"complete\">Completed:</div>\r\n        {this.state.todos.map((todo, index) => (\r\n          todo.completed === true &&\r\n          <div className=\"list-item\" key={index}>\r\n            <Todo \r\n            todo={todo}\r\n          />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TodoList from './TodoList';\r\n\r\nReactDOM.render(<TodoList />, document.getElementById('root'));\r\n"],"sourceRoot":""}